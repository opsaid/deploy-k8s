---
# 安装包源且更新apt cache
- name: 设置 apt 源
  block:
  - name: 更新 sources.list 配置文件
    template:
      src: "{{ ansible_facts['distribution'] }}/{{ ansible_distribution_major_version }}/sources.list"
      dest: /etc/apt/sources.list
  - name: 更新 apt cache
    apt:
      update_cache: yes
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and ( cloud_provider != "private" )

# selinux带来安全保障，同时也加大复杂度，目前没有能力控制好，所以先禁用
- name: 禁用 selinux
  selinux:
    state: disabled
  register: result
  failed_when: result.msg | default('ok', True) is not search('(^ok$|libselinux-python|(SELinux state changed))')

# 禁用 swap
- name: 是否关闭swap
  block:
  - name: 关闭swap，执行 swapoff -a
    command: "swapoff -a"
    when: ansible_swaptotal_mb > 0
  - name: 关闭swap，取消 /etc/fstab 中 swap 挂载
    replace:
      path: "/etc/fstab"
      regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
      replace: '# \1'
  when: disable_swap == True

# centos7默认使用firewalld管理iptable，卸载以防冲突
#- name: 卸载 firewalld 相关安装包
#  package: 
#    name: ['firewalld', 'python-firewall', 'firewalld-filesystem']
#    state: absent
#
#- name: 卸载基础软件包（centos/redhat）
#  package: 
#    name: ['postfix']
#    state: absent
#  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
#
# 关闭非必要服务
#- name: stop unused service
#  systemd:
#    name: "{{ item }}"
#    enabled:  no
#    state: stopped
#  with_items:
#   - rpcbind.socket
#
# socat 在work节点端口转发时候会用到
# debian不存在 libseccomp
#- name: 安装基础软件包（centos/redhat）
#  package: 
#    name: ['vim', 'net-tools', 'libseccomp', 'iproute', 'chrony', 'conntrack-tools', 'socat']
#    state: latest
#  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

# socat 用于 worker 节点端口转发使用(helm)
# ipvsadm 用于 ProxyMode=lvs 下，管理查看条目方便
#- name: 安装基础软件包
#  package:
#    name: ['socat', 'ipvsadm', 'iptables']
#    state: latest

- name: 安装基础软件包（debian/ubuntu）
  package: 
    name: ['socat', 'ipvsadm', 'iptables', 'vim', 'net-tools', 'libseccomp-dev', 'iproute2', 'chrony', 'conntrack', 'avahi-daemon']
    state: latest
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: 卸载基础软件包（ubuntu/debian）
  package: 
    name: ['avahi-daemon', 'cups-browsed']
    state: absent
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

# 关闭默认启动服务
- name: 关闭默认启动服务
  systemd:
    name: "{{ item }}"
    enabled: no
    state: stopped
  with_items:
   - snapd.socket
   - multipathd.service
   - multipathd.socket
   - systemd-resolved
  ignore_errors: yes
  when: ansible_distribution == 'Ubuntu'

# 时间同步
- name: chrony
  copy:
    src: chrony.conf
    dest: /etc/chrony.conf
- name: enabled chronyd
  systemd: 
    name: chronyd
    enabled: yes 
    state: restarted 
    daemon_reload: yes

# 设置时区
- name: Set timezone to {{ timezone }}
  timezone:
    name: "{{ timezone }}"
