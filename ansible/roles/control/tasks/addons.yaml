---

- name: 生成 k8s-system 配置
  vars:
    component: kube-system
    #version: "{{ k8s_version.split('.')[:2] | join('.') }}"
  block:
  - name: 创建 k8s system 部署相关目录
    file: path={{ item }} mode=0755 state=directory
    with_items:
      - "{{ etc_dir }}/addons/{{ component }}"
      - "{{ etc_dir }}/addons/{{ component }}/cluster"
  - name: 创建 system 部署清单
    template:
      src: addons/{{ component }}/{{ item }}.j2
      dest: "{{ etc_dir }}/addons/{{ component }}/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items: 
      - kustomization.yaml
      - cluster/roles.yaml
      - cluster/runtimeclass.yaml
      - cluster/namespace.yaml
  #when: (version == "v1.18") or (version == "v1.22") or (version == "v1.26")

# calico
- name: 生成 calico 配置
  #vars:
    #version: "{{ k8s_version.split('.')[:2] | join('.') }}"
  block:
  - name: 创建 k8s calico 部署相关目录
    file: path={{ item }} mode=0755 state=directory
    with_items:
      - "{{ etc_dir }}/addons/calico"
      - "{{ etc_dir }}/addons/calico/cluster"
      - "{{ etc_dir }}/addons/calico/cluster"
      - "{{ etc_dir }}/addons/calico/config/configmap"
      - "{{ etc_dir }}/addons/calico/crds"
      - "{{ etc_dir }}/addons/calico/workloads"
  - name: 创建 calico 部署清单
    template:
      src: addons/calico/{{ item }}.j2
      dest: "{{ etc_dir }}/calico/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items: 
      - kustomization.yaml
      - cluster/roles.yaml
      - config/configmap/rc.local
      - config/configmap/cni_network_config
      - crds/crds.yaml
      - workloads/deployment.yaml
      - workloads/daemonset.yaml
  when: network_plugin == "calico"
  #when: (version == "v1.18") or (version == "v1.22") or (version == "v1.26")

- name: 生成 cilium 配置
  block:
  - name: 创建 k8s cilium 部署相关目录
    file: path={{ item }} mode=0755 state=directory
    with_items:
      - "{{ etc_dir }}/addons/cilium"
      - "{{ etc_dir }}/addons/cilium/cluster"
      - "{{ etc_dir }}/addons/cilium/service"
      - "{{ etc_dir }}/addons/cilium/config/configmap"
      - "{{ etc_dir }}/addons/cilium/workloads"
  - name: 创建 cilium 部署清单
    template:
      src: addons/cilium/{{ item }}.j2
      dest: "{{ etc_dir }}/addons/cilium/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items: 
      - kustomization.yaml
      - cluster/roles.yaml
      - cluster/namespace.yaml
      - config/configmap/cilium-config.yaml
      - config/configmap/hubble-relay-config.yaml
      - config/configmap/hubble-ui-nginx.config
      - config/configmap/bootstrap-config.json
      - service/services.yaml
      - service/ingresses.yaml
      - workloads/daemonset.yaml
      - workloads/deployment.yaml
  when: network_plugin == "cilium"

# coredns
- name: 生成 coredns 配置
  vars:
    component: coredns
    #version: "{{ k8s_version.split('.')[:2] | join('.') }}"
  block:
  - name: 创建 k8s coredns 部署相关目录
    file: path={{ item }} mode=0755 state=directory
    with_items:
      - "{{ etc_dir }}/addons/{{ component }}"
      - "{{ etc_dir }}/addons/{{ component }}/cluster"
      - "{{ etc_dir }}/addons/{{ component }}/cluster"
      - "{{ etc_dir }}/addons/{{ component }}/config/configmap"
      - "{{ etc_dir }}/addons/{{ component }}/service"
      - "{{ etc_dir }}/addons/{{ component }}/workloads"
  - name: 创建 coredns 部署清单
    template:
      src: addons/{{ component }}/{{ item }}.j2
      dest: "{{ etc_dir }}/addons/{{ component }}/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items: 
      - kustomization.yaml
      - cluster/roles.yaml
      - config/configmap/Corefile
      - service/services.yaml
      - workloads/deployment.yaml
  #when: (version == "v1.18") or (version == "v1.22") or (version == "v1.26")

# metrics-server
- name: 生成 metrics-server 配置
  vars:
    component: metrics-server
    #version: "{{ k8s_version.split('.')[:2] | join('.') }}"
  block:
  - name: 创建 k8s metrics-server 部署相关目录
    file: path={{ item }} mode=0755 state=directory
    with_items:
      - "{{ etc_dir }}/addons/{{ component }}"
      - "{{ etc_dir }}/addons/{{ component }}/crds"
      - "{{ etc_dir }}/addons/{{ component }}/cluster"
      - "{{ etc_dir }}/addons/{{ component }}/service"
      - "{{ etc_dir }}/addons/{{ component }}/workloads"
  - name: 创建 metrics-server 部署清单
    template:
      src: addons/{{ component }}/{{ item }}.j2
      dest: "{{ etc_dir }}/addons/{{ component }}/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items: 
      - kustomization.yaml
      - crds/apiservice.yaml
      - cluster/roles.yaml
      - service/services.yaml
      - workloads/deployment.yaml
  #when: (version == "v1.18") or (version == "v1.22") or (version == "v1.26")

# kube-proxy
- name: 生成 kube-proxy 配置
  vars:
    component: kube-proxy
    #version: "{{ k8s_version.split('.')[:2] | join('.') }}"
  block:
  - name: 创建 k8s kube-proxy 部署相关目录
    file: path={{ item }} mode=0755 state=directory
    with_items:
      - "{{ etc_dir }}/addons/{{ component }}"
      - "{{ etc_dir }}/addons/{{ component }}/cluster"
      - "{{ etc_dir }}/addons/{{ component }}/workloads"
      - "{{ etc_dir }}/addons/{{ component }}/config"
      - "{{ etc_dir }}/addons/{{ component }}/config/configmap"
  - name: 创建 kube-proxy 部署清单
    template:
      src: addons/{{ component }}/{{ item }}.j2
      dest: "{{ etc_dir }}/addons/{{ component }}/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items: 
      - kustomization.yaml
      - cluster/roles.yaml
      - config/configmap/config.conf
      - config/configmap/kubeconfig.conf
      - workloads/daemonset.yaml
  #when: (version == "v1.18") or (version == "v1.22") or (version == "v1.26")

# ingress-nginx
- name: 生成 ingress-nginx 配置
  vars:
    component: ingress-nginx
    #version: "{{ k8s_version.split('.')[:2] | join('.') }}"
  block:
  - name: 创建 k8s ingress-nginx 部署相关目录
    file: path={{ item }} mode=0755 state=directory
    with_items:
      - "{{ etc_dir }}/addons/{{ component }}"
      - "{{ etc_dir }}/addons/{{ component }}/cluster"
      - "{{ etc_dir }}/addons/{{ component }}/service"
      - "{{ etc_dir }}/addons/{{ component }}/workloads"
      - "{{ etc_dir }}/addons/{{ component }}/config"
      - "{{ etc_dir }}/addons/{{ component }}/config/configmap"
  - name: 创建 ingress-nginx 部署清单
    template:
      src: addons/{{ component }}/{{ item }}.j2
      dest: "{{ etc_dir }}/addons/{{ component }}/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items:
      - kustomization.yaml
      - cluster/roles.yaml
      - cluster/ingressclass.yaml
      - cluster/validating-webhook.yaml
      - config/configmap/nginx-configuration.yaml
      - workloads/daemonset.yaml
      - workloads/job.yaml
      - service/services.yaml
  #when: (version == "v1.22") or (version == "v1.26")
