- name: 生成 {{ component }} 配置
  vars:
    component: dexidp
  block:
  - name: 创建 {{ component }} 部署相关目录
    file: path={{ item }} mode=0755 state=directory
    with_items:
      - "{{ etc_dir }}/addons/{{ component }}"
      - "{{ etc_dir }}/addons/{{ component }}/cluster"
      - "{{ etc_dir }}/addons/{{ component }}/workloads"
      - "{{ etc_dir }}/addons/{{ component }}/workloads/deployments"
      - "{{ etc_dir }}/addons/{{ component }}/config"
      - "{{ etc_dir }}/addons/{{ component }}/config/configmap"
      - "{{ etc_dir }}/addons/{{ component }}/config/secret"
      - "{{ etc_dir }}/addons/{{ component }}/service"
  - name: 生成 {{ component }} 模版清单
    template:
      src: addons/{{ component }}/{{ item }}.j2
      dest: "{{ etc_dir }}/addons/{{ component }}/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items:
      - kustomization.yaml
      - config/configmap/config.yaml
  - name: 拷贝 {{ component }} 部署清单
    template:
      src: addons/{{ component }}/{{ item }}
      dest: "{{ etc_dir }}/addons/{{ component }}/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items:
      - cluster/roles.yaml
      - service/ingresses.yaml
      - service/services.yaml
      - workloads/deployments/dexidp.yaml

- name: 生成 {{ component }} 配置
  vars:
    component: argo-cd
  block:
  - name: 创建 argo-cd 部署相关目录
    file: path={{ item }} mode=0755 state=directory
    with_items:
      - "{{ etc_dir }}/addons/{{ component }}"
      - "{{ etc_dir }}/addons/{{ component }}/cluster"
      - "{{ etc_dir }}/addons/{{ component }}/cluster/argocd-server-applications"
      - "{{ etc_dir }}/addons/{{ component }}/workloads"
      - "{{ etc_dir }}/addons/{{ component }}/workloads/deployments"
      - "{{ etc_dir }}/addons/{{ component }}/workloads/statefulsets"
      - "{{ etc_dir }}/addons/{{ component }}/config"
      - "{{ etc_dir }}/addons/{{ component }}/config/configmap"
      - "{{ etc_dir }}/addons/{{ component }}/config/secret"
      - "{{ etc_dir }}/addons/{{ component }}/service"
  - name: 生成 argo-cd 模版清单
    template:
      src: addons/{{ component }}/{{ item }}.j2
      dest: "{{ etc_dir }}/addons/{{ component }}/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items:
      - kustomization.yaml
      - config/configmap/argocd-cm.yaml
  - name: 拷贝 argo-cd 部署清单
    template:
      src: addons/{{ component }}/{{ item }}
      dest: "{{ etc_dir }}/addons/{{ component }}/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items:
      - cluster/crds.yaml
      - cluster/namespace.yaml
      - cluster/roles.yaml
      - service/ingresses.yaml
      - service/services.yaml
      - cluster/argocd-server-applications/argocd-notifications-controller-rbac-clusterrole.yaml
      - cluster/argocd-server-applications/argocd-server-rbac-clusterrole.yaml
      - cluster/argocd-server-applications/argocd-server-rbac-clusterrolebinding.yaml
      - cluster/argocd-server-applications/argocd-notifications-controller-rbac-clusterrolebinding.yaml
      - cluster/argocd-server-applications/kustomization.yaml
      - config/configmap/argocd-gpg-keys-cm.yaml
      - config/configmap/argocd-rbac-cm.yaml
      - config/configmap/argocd-ssh-known-hosts-cm.yaml
      - config/configmap/argocd-cmd-params-cm.yaml
      - config/configmap/argocd-notifications-cm.yaml
      - config/configmap/argocd-secret.yaml
      - config/configmap/argocd-tls-certs-cm.yaml
      - config/secret/argocd-notifications-secret.yaml
      - config/secret/argocd-secret.yaml
      - workloads/deployments/argocd-applicationset-controller.yaml
      - workloads/deployments/argocd-redis.yaml
      - workloads/deployments/argocd-server.yaml
      - workloads/deployments/argocd-notifications-controller.yaml
      - workloads/deployments/argocd-repo-server.yaml
      - workloads/statefulsets/argocd-application-controller.yaml

- name: 生成 {{ component }} 配置
  vars:
    component: argo-workflows
  block:
  - name: 创建 {{ component }} 部署相关目录
    file: path={{ item }} mode=0755 state=directory
    with_items:
      - "{{ etc_dir }}/addons/{{ component }}"
      - "{{ etc_dir }}/addons/{{ component }}/cluster"
      - "{{ etc_dir }}/addons/{{ component }}/workloads"
      - "{{ etc_dir }}/addons/{{ component }}/workloads/deployments"
      - "{{ etc_dir }}/addons/{{ component }}/workloads/statefulsets"
      - "{{ etc_dir }}/addons/{{ component }}/config"
      - "{{ etc_dir }}/addons/{{ component }}/config/configmap"
      - "{{ etc_dir }}/addons/{{ component }}/config/secret"
      - "{{ etc_dir }}/addons/{{ component }}/service"
  - name: 生成 {{ component }} 模版清单
    template:
      src: addons/{{ component }}/{{ item }}.j2
      dest: "{{ etc_dir }}/addons/{{ component }}/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items:
      - kustomization.yaml
      - config/secret/oauth2-client.yaml
      - config/configmap/workflow-controller-configmap.yaml
  - name: 拷贝 {{ component }} 部署清单
    template:
      src: addons/{{ component }}/{{ item }}
      dest: "{{ etc_dir }}/addons/{{ component }}/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items:
      - cluster/crds.yaml
      - cluster/namespace.yaml
      - cluster/roles.yaml
      - service/ingresses.yaml
      - service/services.yaml
      - workloads/deployments/argo-server.yaml
      - workloads/deployments/workflow-controller.yaml

- name: 生成 {{ component }} 配置
  vars:
    component: argo-events
  block:
  - name: 创建 {{ component }} 部署相关目录
    file: path={{ item }} mode=0755 state=directory
    with_items:
      - "{{ etc_dir }}/addons/{{ component }}"
      - "{{ etc_dir }}/addons/{{ component }}/cluster"
      - "{{ etc_dir }}/addons/{{ component }}/workloads"
      - "{{ etc_dir }}/addons/{{ component }}/workloads/deployments"
      - "{{ etc_dir }}/addons/{{ component }}/workloads/statefulsets"
      - "{{ etc_dir }}/addons/{{ component }}/config"
      - "{{ etc_dir }}/addons/{{ component }}/config/configmap"
      - "{{ etc_dir }}/addons/{{ component }}/config/secret"
      - "{{ etc_dir }}/addons/{{ component }}/service"
  - name: 生成 {{ component }} 模版清单
    template:
      src: addons/{{ component }}/{{ item }}.j2
      dest: "{{ etc_dir }}/addons/{{ component }}/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items:
      - kustomization.yaml
      - config/configmap/controller-config.yaml
  - name: 拷贝 {{ component }} 部署清单
    template:
      src: addons/{{ component }}/{{ item }}
      dest: "{{ etc_dir }}/addons/{{ component }}/{{ item }}"
      owner: "{{ kube_user.name }}"
      group: root
      mode: 0644
    with_items:
      - cluster/crds.yaml
      - cluster/namespace.yaml
      - cluster/roles.yaml
      - cluster/events-webhook.yaml
      - service/services.yaml
      - workloads/deployments/controller-manager.yaml
      - workloads/deployments/events-webhook.yaml
