---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: controller
  name: default-ingress-nginx-controller
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
  revisionHistoryLimit: 3
  minReadySeconds: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
    spec:
      containers:
      - args:
        - /nginx-ingress-controller
        - --election-id=ingress-controller-leader
        - --ingress-class=nginx
        - --watch-ingress-without-class
        - --controller-class=k8s.io/ingress-nginx
        - --configmap=$(POD_NAMESPACE)/default-ingress-nginx-controller
        - --tcp-services-configmap=$(POD_NAMESPACE)/default-ingress-nginx-tcp
        - --udp-services-configmap=$(POD_NAMESPACE)/default-ingress-nginx-udp
        - --annotations-prefix=nginx.ingress.kubernetes.io
        - --publish-status-address={{ apiserver_haip }}
        - --validating-webhook=:8443
        - --validating-webhook-certificate=/usr/local/certificates/cert
        - --validating-webhook-key=/usr/local/certificates/key
        - --v=2
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_PRELOAD
          value: /usr/local/lib/libmimalloc.so
        image: registry.cn-hangzhou.aliyuncs.com/kube-image-repo/ingress-nginx-controller:v1.3.1
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /wait-shutdown
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: controller
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: https
          containerPort: 443
          protocol: TCP
        - name: metrics
          containerPort: 10254
          protocol: TCP
        - name: webhook
          containerPort: 8443
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 90Mi
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - NET_BIND_SERVICE
            drop:
            - ALL
          runAsUser: 101
        volumeMounts:
        - mountPath: /usr/local/certificates/
          name: webhook-cert
          readOnly: true
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true

      #securityContext:
        #sysctls:
        #- name: net.core.somaxconn
        #  value: "65535"
        #- name: net.ipv4.ip_local_port_range
        #  value: "1024 65535"
        #- name: kernel.core_uses_pid
        #  value: "0"

      # 仅当不使用 hostNetwork 时配置内核参数
      # 不安全的 sysctl 通过 init 容器实现配置
      initContainers:
      - command:
        - /bin/sh
        - -c
        - |
          if [ "$POD_IP" != "$HOST_IP" ]; then
            mount -o remount rw /proc/sys
            sysctl -w net.core.somaxconn=65535
            sysctl -w net.ipv4.ip_local_port_range="1024 65535"
            sysctl -w kernel.core_uses_pid=0
          fi
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        image: registry.cn-hangzhou.aliyuncs.com/kube-image-repo/busybox:1.35.0 
        imagePullPolicy: IfNotPresent
        name: init-sysctl
        resources: {}
        securityContext:
          #capabilities:
          #  add:
          #  - SYS_ADMIN
          #  drop:
          #  - ALL
          privileged: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File

      nodeSelector:
        kubernetes.io/os: linux
{% if system_service_in_control_node %}
        node-role.kubernetes.io/master: ""
{% endif %}
      serviceAccountName: default-ingress-nginx
      terminationGracePeriodSeconds: 300
      volumes:
      - name: webhook-cert
        secret:
          secretName: default-ingress-nginx-admission
      - hostPath:
          path: /etc/localtime
          type: File
        name: localtime
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
