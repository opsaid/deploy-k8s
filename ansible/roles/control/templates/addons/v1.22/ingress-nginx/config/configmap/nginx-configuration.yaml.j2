---
kind: ConfigMap
apiVersion: v1
metadata:
  labels:
    app: ingress-nginx
  name: nginx-configuration
  namespace: kube-system
data:
  allow-backend-server-header: "true"
  allow-snippet-annotations: "false"
  annotation-value-word-blocklist: "load_module,lua_package,_by_lua,location,root,proxy_pass,serviceaccount,{,},'"
  access-log-path: "/var/log/nginx/access.log"
  error-log-path: "/var/log/nginx/error.log"
  client-body-buffer-size: "16k"
  disable-access-log: "false"
  disable-ipv6: "true"
  disable-ipv6-dns: "true"
  enable-underscores-in-headers: "true"
  hsts: "false"
  ignore-invalid-headers: "true"
  error-log-level: "error"
  log-format-escape-json: "false"
  # $http_x_tr_request_id = $req_id
  log-format-upstream: '$msec "$remote_addr" $request_length "$request_method" "$host" "$request_uri" "$server_name" "$server_addr" $server_port "$uri" "$args" "$server_protocol" $bytes_sent $body_bytes_sent $status $request_time "$http_referer" "$http_user_agent" "$http_x_tr_user_id" "$http_x_tr_pv_id" "$req_id" "$http_x_tr_rpc_id" "$upstream_addr" "$http_x_forwarded_for" "$proxy_upstream_name" "$upstream_response_length" "$upstream_response_time" "$upstream_status"'
  enable-multi-accept: "true"
  max-worker-connections: "65536"
  proxy-body-size: "20m"
  proxy-connect-timeout: "10"
  reuse-port: "true"
  server-tokens: "false"
  ssl-redirect: "false"
  proxy-real-ip-cidr: "100.64.0.0/10,34.111.147.9/32,34.96.0.0/20,34.127.192.0/18,2600:1901:0:935::/32"
  use-proxy-protocol: "false"
  proxy-protocol-header-timeout: "60s"
  use-gzip: "true"
  use-geoip: "false"
  use-geoip2: "false"
  enable-brotli: "false"
  #use-http2: "true"
  gzip-level: "5"
  #worker-processes: "4"
  upstream-keepalive-connections: "32"
  upstream-keepalive-timeout: "900"
  upstream-keepalive-requests: "100"
  use-forwarded-headers: "true"
  forwarded-for-header: "X-Forwarded-For"
  generate-request-id: "true"
  enable-opentracing: "false"
  enable-syslog: "false"
  disable-lua-resty-waf: "true"
  worker-cpu-affinity: "auto"

  # 兼容内部x-tr-request-id请求头
  http-snippet: |
    add_header X-Tr-Request-ID $req_id;
    map $http_x_tr_request_id $req_id {
        default   $http_x_tr_request_id;
        ""        $request_id;
    }
  location-snippet: |
    proxy_set_header X-Tr-Request-ID $req_id;

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: tcp-services
  namespace: kube-system
data:

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: udp-services
  namespace: kube-system
data:
