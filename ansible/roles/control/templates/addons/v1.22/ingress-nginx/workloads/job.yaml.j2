---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
  name: default-ingress-nginx-admission-create
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
      name: default-ingress-nginx-admission-create
    spec:
      containers:
      - name: create
        image: registry.cn-hangzhou.aliyuncs.com/kube-image-repo/kube-webhook-certgen:v1.3.0
        imagePullPolicy: IfNotPresent
        args:
        - create
        - --host=default-ingress-nginx-controller-admission,default-ingress-nginx-controller-admission.$(POD_NAMESPACE).svc
        - --namespace=$(POD_NAMESPACE)
        - --secret-name=default-ingress-nginx-admission
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          allowPrivilegeEscalation: false
      restartPolicy: OnFailure
      serviceAccountName: default-ingress-nginx-admission
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000

---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: admission-webhook
  name: default-ingress-nginx-admission-patch
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/component: admission-webhook
      name: default-ingress-nginx-admission-patch
    spec:
      containers:
      - name: patch
        image: registry.cn-hangzhou.aliyuncs.com/kube-image-repo/kube-webhook-certgen:v1.3.0
        imagePullPolicy: IfNotPresent
        args:
        - patch
        - --webhook-name=default-ingress-nginx-admission
        - --namespace=$(POD_NAMESPACE)
        - --patch-mutating=false
        - --secret-name=default-ingress-nginx-admission
        - --patch-failure-policy=Fail
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        securityContext:
          allowPrivilegeEscalation: false
      restartPolicy: OnFailure
      serviceAccountName: default-ingress-nginx-admission
      nodeSelector:
        kubernetes.io/os: linux
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 2000
