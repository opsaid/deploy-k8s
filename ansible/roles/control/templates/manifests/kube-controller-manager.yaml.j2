apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    component: kube-controller-manager
    tier: control-plane
  name: kube-controller-manager
  namespace: kube-system
spec:
  containers:
  - command:
    - kube-controller-manager
{% for key, value in controller_manager_args.items() %}
    - --{{ key | replace('_','-') }}={{ value }}
{% endfor %}
{% if (groups['control'] | length) > 1 %}
    - --leader-elect=true
    - --leader-elect-lease-duration=60s
    - --leader-elect-renew-deadline=30s
    - --leader-elect-resource-lock=endpointsleases
    - --leader-elect-resource-name=kube-controller-manager
    - --leader-elect-resource-namespace=kube-system
    - --leader-elect-retry-period=10s
{% else %}
    - --leader-elect=false
{% endif %}
    image: {{ internal_images.namespace }}/kube-controller-manager:{{ internal_images.system.kube_controller_manager }}
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: {{ ansible_facts[listen_device_name]['ipv4']['address'] }}
        path: /healthz
        port: 10257
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    name: kube-controller-manager
    resources:
      requests:
        cpu: 200m
    startupProbe:
      failureThreshold: 24
      httpGet:
        host: {{ ansible_facts[listen_device_name]['ipv4']['address'] }}
        path: /healthz
        port: 10257
        scheme: HTTPS
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 15
    volumeMounts:
    - mountPath: /etc/ssl/certs
      name: ca-certs
      readOnly: true
    - mountPath: /etc/pki
      name: etc-pki
      readOnly: true
    - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
      name: flexvolume-dir
    - mountPath: {{ etc_dir }}/pki
      name: k8s-certs
      readOnly: true
    - mountPath: {{ log_dir }}
      name: k8s-logs
    - mountPath: {{ etc_dir }}/controller-manager.conf
      name: kubeconfig
      readOnly: true
  hostNetwork: true
  priorityClassName: system-node-critical
  securityContext:
    runAsNonRoot: true
    runAsUser: 997
    seccompProfile:
      type: RuntimeDefault
  volumes:
  - hostPath:
      path: /etc/ssl/certs
      type: DirectoryOrCreate
    name: ca-certs
  - hostPath:
      path: /etc/pki
      type: DirectoryOrCreate
    name: etc-pki
  - hostPath:
      path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
      type: DirectoryOrCreate
    name: flexvolume-dir
  - hostPath:
      path: {{ etc_dir }}/pki
      type: DirectoryOrCreate
    name: k8s-certs
  - hostPath:
      path: {{ log_dir }}
      type: Directory
    name: k8s-logs
  - hostPath:
      path: {{ etc_dir }}/controller-manager.conf
      type: FileOrCreate
    name: kubeconfig
status: {}
