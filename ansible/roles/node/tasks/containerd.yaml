---
# 创建 containerd 相关目录
- name: 创建 containerd 相关目录
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ data_dir }}/containerd"
    - /opt/containerd
    - /etc/containerd  

# 模块开机加载
- name: /etc/modules-load.d/containerd.conf
  template:
    src: containerd/module
    dest: /etc/modules-load.d/containerd.conf

# 模块在线加载
- name: 加载模块
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - overlay
    - br_netfilter

- name: 设置内核参数
  sysctl: name={{ item }} value=1 state=present sysctl_set=yes
  with_items:
    - net.bridge.bridge-nf-call-iptables
    - net.bridge.bridge-nf-call-ip6tables
    - net.ipv4.ip_forward

# 安装部署containerd
- stat:
    path: /opt/containerd/bin/containerd
  register: containerd
- name: Copy And Unpackage containerd
  unarchive:
    src: ../../binary/files/containerd/containerd-1.3.9-linux-amd64.tar.gz
    dest: /opt/containerd
  when: containerd.stat.exists == False

- name: 创建cni相关目录
  file: path={{ item }} mode=0755 state=directory
  with_items:
    - /opt/cni/bin
    - /etc/cni/net.d

- name: 创建 containerd 配置文件
  template:
    src: containerd/config.toml.j2
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: 0644

# 拷贝 runc 二进制文件
- stat:
    path: /opt/containerd/bin/runc
  register: runc
- name: 拷贝 runc 二进制文件
  copy:
    src: ../../binary/files/containerd/runc-v1.0.0-rc91-linux-amd64
    dest: /opt/containerd/bin/runc
    owner: root
    group: root
    mode: 0755
  when: runc.stat.exists == False

- name: 创建 containerd.service
  template:
    src: containerd/containerd.service.j2
    dest: /usr/lib/systemd/system/containerd.service
    owner: root
    group: root
    mode: 0644

- name: enabled containerd
  systemd:
    name: containerd
    enabled: yes
    state: started
    daemon_reload: yes
